----------------------------------------------------------------
-- Deal with loot injection in stalkers and traders
----------------------------------------------------------------
gc						 	= game.translate_string
get_data 					= magazine_binder.get_data
set_data 					= magazine_binder.set_data
is_supported_weapon 		= magazine_binder.is_supported_weapon
get_magazine_caliber 		= magazine_binder.get_magazine_caliber
is_compatible 				= magazine_binder.is_compatible
is_magazine					= magazine_binder.is_magazine
is_carried_mag				= magazine_binder.is_carried_mag
toggle_carried_mag			= magazine_binder.toggle_carried_mag
room_in_pouch				= magazine_binder.room_in_pouch
eject						= magazines.eject_magazine
get_mag_info				= magazine_binder.get_mag_info

ini_loadouts = ini_file("items\\settings\\npc_mag_loadouts.ltx")

local mag_timer_global = nil
local tm = m_data.trade_manager
-- trader management

function IsTrader(npc)
	local st = db.storage[npc:id()]
	if st.is_trader == nil then
		local trader = false
		if npc:character_community() == "trader" or npc:clsid() == clsid.script_trader or npc:clsid() == clsid.trader then
			trader = true
		end
		if string.find(npc:section(),"trader") then
			trader = true
		end
		local cini = db.storage[npc:id()].ini
		local logic = db.storage[npc:id()].section_logic
		if not logic and not trader then
			return false
		end
		if cini and logic and cini:section_exist(logic) and cini:line_exist(logic,"trade") then
			trader = true
		end
		st.is_trader = trader
	end
	return st.is_trader == true
end

local function get_mag_prop(rank, prop)
    rank = rank or "novice"
    return ini_loadouts.r_float_ex(rank.."_mag_loadout", prop)
end

-- called on each created magazine, autofill with the appropriate crap
function random_pop_mag(mag_id, mag_sec, ammo_table, stalker_rank)
    local amount = math.random(get_mag_prop(stalker_rank, "mag_fill_max"))
    local mag_data = get_data(mag_id)
    local to_fill = math.floor((amount/100) * SYS_GetParam(2, mag_sec, "max_mag_size"))

end

-- death management
CreateReleaseItem = death_manager.create_release_item
function death_manager.create_release_item(npc)
    function itr_inv(npc, item)
		if IsWeapon(nil,item:clsid()) and is_supported_weapon(item) then
            local mags_to_spawn = math.random(get_mag_prop(npc:rank(), "max_mags"))
            local mag_sec = weapon_default_magazine(item:section())
            local ammo_table = get_magazine_caliber(mag_sec)
            for i=1,mags_to_spawn do
                local new_mag = alife_create_item(mag_sec, npc)
                random_pop_mag(new_mag.id, mag_sec, ammo_table, npc:rank())
            end
        end
    end
    npc:iterate_inventory(itr_inv)
end

function on_game_start()

	RegisterScriptCallback("ActorMenu_on_trade_started",on_trade_opened)
	RegisterScriptCallback("ActorMenu_on_trade_closed",on_trade_closed)
end